{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xiezh\\\\OneDrive\\\\Desktop\\\\code\\\\club\\\\tpeo\\\\apa\\\\dashboard\\\\apa-dashboard\\\\src\\\\pages\\\\building-5.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Building5Map from '../components/building-5-map.js';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport '../style/building.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findKennelData(data, kennel) {\n  for (let i = 0; i < data.length; i++) {\n    if (parseInt(data[i].kennelNumber) === parseInt(kennel)) {\n      return data[i];\n    }\n  }\n  return null;\n}\nfunction KennelsSummary(data) {\n  const volunteerColorCounts = data.reduce((counts, item) => {\n    const color = item.volunteerColor.split(' ')[0];\n    counts[color] = (counts[color] || 0) + 1;\n    return counts;\n  }, {});\n  console.log(volunteerColorCounts);\n  return volunteerColorCounts;\n}\n_c = KennelsSummary;\nfunction KennelsCount(data) {\n  const uniqueKennelNumbers = [...new Set(data.map(item => item.kennelNumber))];\n  const uniqueKennelCount = uniqueKennelNumbers.length;\n  return uniqueKennelCount;\n}\n_c2 = KennelsCount;\nfunction Building5() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(`http://127.0.0.1:5000/api/kennel/start=1&end=24`);\n      // console.log(response);\n      const newData = await response.json();\n      // console.log(newData);\n      setData(newData['data']);\n    };\n    fetchData();\n  }, []);\n  const currentUrl = window.location.href;\n  const kennelNumber = currentUrl.substring(currentUrl.lastIndexOf('/') + 1).substring(7);\n  const kennelColorMap = KennelsSummary(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-map\",\n      children: /*#__PURE__*/_jsxDEV(Building5Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"building-info\",\n      children: currentUrl.substring(currentUrl.lastIndexOf('/') + 1).startsWith('kennel=') ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"KennelInfo\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '18rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"Kennel \", kennelNumber]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: findKennelData(data, kennelNumber) ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Volunteer Color: \", findKennelData(data, kennelNumber)['volunteerColor'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 90\n                }, this), \"Dog Name: \", findKennelData(data, kennelNumber)['name'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 73\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No information available for kennel.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              href: \"/tlac/building-5\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Building 5 Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: data.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Occupied Kennels: \", KennelsCount(data), kennelColorMap ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Object.entries(kennelColorMap).map(([key, value]) => (\", /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [key, \": \", value]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), \"))\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 35\n              }, this) : null, \"Note: total number of color tallies may not match total number of occupied kennels, as kennels may have multiple animals.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Building5, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c3 = Building5;\nexport default Building5;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"KennelsSummary\");\n$RefreshReg$(_c2, \"KennelsCount\");\n$RefreshReg$(_c3, \"Building5\");","map":{"version":3,"names":["React","useEffect","useState","Building5Map","Button","Card","jsxDEV","_jsxDEV","findKennelData","data","kennel","i","length","parseInt","kennelNumber","KennelsSummary","volunteerColorCounts","reduce","counts","item","color","volunteerColor","split","console","log","_c","KennelsCount","uniqueKennelNumbers","Set","map","uniqueKennelCount","_c2","Building5","_s","setData","fetchData","response","fetch","newData","json","currentUrl","window","location","href","substring","lastIndexOf","kennelColorMap","children","className","fileName","_jsxFileName","lineNumber","columnNumber","startsWith","style","width","Body","Title","Text","key","value","_c3","$RefreshReg$"],"sources":["C:/Users/xiezh/OneDrive/Desktop/code/club/tpeo/apa/dashboard/apa-dashboard/src/pages/building-5.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Building5Map from '../components/building-5-map.js';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../style/building.css';\r\n\r\nfunction findKennelData(data, kennel) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (parseInt(data[i].kennelNumber) === parseInt(kennel)) {\r\n      return data[i];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction KennelsSummary(data) {\r\n  const volunteerColorCounts = data.reduce((counts, item) => {\r\n    const color = item.volunteerColor.split(' ')[0];\r\n    counts[color] = (counts[color] || 0) + 1;\r\n    return counts;\r\n  }, {});\r\n  console.log(volunteerColorCounts);\r\n  return volunteerColorCounts;\r\n}\r\n\r\nfunction KennelsCount(data) {\r\n  const uniqueKennelNumbers = [...new Set(data.map(item => item.kennelNumber))];\r\n  const uniqueKennelCount = uniqueKennelNumbers.length;\r\n  return uniqueKennelCount;\r\n}\r\n\r\nfunction Building5() {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(`http://127.0.0.1:5000/api/kennel/start=1&end=24`);\r\n      // console.log(response);\r\n      const newData = await response.json();\r\n      // console.log(newData);\r\n      setData(newData['data']);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const currentUrl = window.location.href;\r\n  const kennelNumber = currentUrl.substring(currentUrl.lastIndexOf('/') + 1).substring(7);\r\n  const kennelColorMap = KennelsSummary(data);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"building-map\">\r\n        <Building5Map />\r\n      </div>\r\n      <div className=\"building-info\">\r\n        {currentUrl.substring(currentUrl.lastIndexOf('/') + 1).startsWith('kennel=') ? \r\n        <div className=\"KennelInfo\">\r\n          <Card style={{ width: '18rem' }}>\r\n            <Card.Body>\r\n              <Card.Title>Kennel {kennelNumber}</Card.Title>\r\n              <Card.Text>\r\n                {findKennelData(data, kennelNumber) ? <p>\r\n                  Volunteer Color: {findKennelData(data, kennelNumber)['volunteerColor']}<br />\r\n                  Dog Name: {findKennelData(data, kennelNumber)['name']}<br />\r\n                </p> : \r\n                <p>No information available for kennel.</p>}\r\n              </Card.Text>\r\n              <Button href=\"/tlac/building-5\">Back</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n        : \r\n        <Card style={{ width: '18rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>Building 5 Summary</Card.Title>\r\n            <Card.Text>\r\n              {data.length > 0 ? \r\n              <p>\r\n                Total Occupied Kennels: {KennelsCount(data)}\r\n                {kennelColorMap ? <div>\r\n                  Object.entries(kennelColorMap).map(([key, value]) => (\r\n                    <p key={key}>\r\n                      {key}: {value}\r\n                    </p>\r\n                  ))\r\n                </div> : null}\r\n                Note: total number of color tallies may not match total number of occupied kennels,\r\n                as kennels may have multiple animals.\r\n              </p> : \r\n              <p>Error</p>\r\n              }\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Building5;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}